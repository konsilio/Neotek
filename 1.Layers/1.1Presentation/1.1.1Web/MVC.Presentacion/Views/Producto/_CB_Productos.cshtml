@using MVC.Presentacion.Models.Requisicion;
@{

    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "Productos";
        settings.CallbackRouteValues = new
        {
            Controller = "Producto",
            Action = "CB_Productos" };
        settings.KeyFieldName = "IdProducto";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFooter = true;
        //settings.Styles.Table.CssClass = "table table-striped";
        settings.Columns.Add(c =>
        {
            c.FieldName = "IdProducto";
            c.Caption = "ID";
            c.Visible = false;
        });
        settings.Columns.Add("TipoProducto", "Tipo");
        settings.Columns.Add("Categoria", "Categoría");
        settings.Columns.Add("ProductoLinea", "Línea");
        settings.Columns.Add("Descripcion", "Descripción");
        settings.Columns.Add("UnidadMedida", "Unidad de Medida");
        settings.Columns.Add(c =>
        {
            c.Caption = "Activo Venta";
            c.FieldName = "EsActivoVenta";
            c.SetDataItemTemplateContent(d =>
            {
                if (Boolean.Parse(d.Grid.GetRowValues(d.VisibleIndex, "EsActivoVenta").ToString()))
                {
                    ViewContext.Writer.Write(string.Format("SI"));
                }
                else
                {
                    ViewContext.Writer.Write(string.Format("NO"));
                }
            });

        });
        settings.Columns.Add(c=> {
            c.Caption = "Es Gas";
            c.FieldName = "EsGas";
            c.SetDataItemTemplateContent(d => {
                if (Boolean.Parse(d.Grid.GetRowValues(d.VisibleIndex, "EsGas").ToString()))
                {
                    ViewContext.Writer.Write(string.Format("SI"));
                }
                else
                {
                    ViewContext.Writer.Write(string.Format("NO"));
                }
            });

        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Es Transporte";
            c.FieldName = "EsTransporteGas";
            c.SetDataItemTemplateContent(d =>
            {
                if (Boolean.Parse(d.Grid.GetRowValues(d.VisibleIndex, "EsTransporteGas").ToString()))
                {
                    ViewContext.Writer.Write(string.Format("SI"));
                }
                else
                {
                    ViewContext.Writer.Write(string.Format("NO"));
                }
            });

        });

        settings.Columns.Add(c =>
        {
            c.Caption = "Acción";
            c.Width = System.Web.UI.WebControls.Unit.Percentage(9);
            c.SetDataItemTemplateContent(d =>
            {

                ViewContext.Writer.Write(string.Format("<a href='" + Url.Action("EditarProducto", "Producto", new { Id = d.KeyValue}) + "' class='tip' role='button' aria-haspopup='true' aria-expanded='false'><i class='material-icons'>edit</i></a>"));

                ViewContext.Writer.Write(string.Format("<a href='" + Url.Action("EliminarProducto", "Producto", new { Id = d.KeyValue }) + "' class='tip' role='button' aria-haspopup='true' aria-expanded='false'><i class='material-icons'>delete</i></a>"));

            });
        });
    });

}
@grid.Bind(Model).GetHtml()