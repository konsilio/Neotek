@model List<MVC.Presentacion.Models.Cobranza.CargosModel>

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "abono_" + ViewData["IdVenta"];
        settings.SettingsDetail.MasterGridName = "CreditoRecuperado";
        settings.CallbackRouteValues = new { Controller = "CorteCaja", Action = "DetalleVentas", CustomerID = ViewData["CustomerID"] };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.Settings.ShowFooter = true;
        settings.Settings.ShowFilterRow = true;
        settings.Columns.Add(c =>
        {
            c.FieldName = "FechaAbono";
            c.Caption = "Fecha de Abono";
            c.Settings.AllowSort = DefaultBoolean.False;
            c.EditFormSettings.Visible = DefaultBoolean.False;
            c.GroupIndex = 1;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "MontoAbono";
            c.Caption = "Monto de Abono";
            c.Settings.AllowSort = DefaultBoolean.False;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.FieldName = "FormaPago";
            c.Caption = "Forma de Pago";
            c.Settings.AllowSort = DefaultBoolean.False;
            c.EditFormSettings.Visible = DefaultBoolean.False;
        });
        settings.Columns.Add(c =>
        {
            c.Caption = "Acción";
            c.EditFormSettings.Visible = DefaultBoolean.False;
            c.SetDataItemTemplateContent(x =>
            {
                if (x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI") != null && !x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI").ToString().Equals(string.Empty))
                {
                    ViewContext.Writer.Write(string.Format("<a href=" + x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI").ToString() + " class='tip' target='_blank' role='button' aria-haspopup='true' aria-expanded='false'><i class='material-icons'>picture_as_pdf</i><span>PDF</span></a>"));
                }
                if (x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI") != null && !x.Grid.GetRowValues(x.VisibleIndex, "URL_XML").ToString().Equals(string.Empty))
                {
                    ViewContext.Writer.Write(string.Format("<a href=" + x.Grid.GetRowValues(x.VisibleIndex, "URL_XML").ToString() + "class='tip' target='_blank' role='button' aria-haspopup='true' aria-expanded='false'><i class='material-icons'>file_download</i></a>"));
                }
                if (x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI") == null && x.Grid.GetRowValues(x.VisibleIndex, "URL_CFDI") == null)
                {
                    ViewContext.Writer.Write("Sin acciones");
                }
            });
        });
    }
).Bind(Model).GetHtml()
