@model MVC.Presentacion.Models.RecargaCombustibleModel
@using PagedList.Mvc;
@using PagedList;
@Html.DevExpress().GetStyleSheets(
            new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout, Theme = "Material" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.Editors, Theme = "Material" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Material" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Material" }
        )
@Html.DevExpress().GetScripts(
            new Script { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
            new Script { ExtensionSuite = ExtensionSuite.Editors },
            new Script { ExtensionSuite = ExtensionSuite.GridView }
        )
<script src="~/assets/plugins/bootstrap-notify/bootstrap-notify.js"></script>
<script src="~/assets/js/pages/ui/notifications.js"></script>
<script type="text/javascript">
    var mensaje = '@ViewBag.Msj';
    if (mensaje != '') {
        $(window).on("load", showNotification('alert-success', mensaje, 'top', 'center', '', ''));
    }
    function OnSelectedIndexChanged(s, e) {
        var item = Id_Vehiculo.cphidenVehiculos[Id_Vehiculo.GetSelectedIndex()].split("|")
        $("#esCamioneta").val(item[0])
        $("#esPipa").val(item[1])
        $("#esUtilitario").val(item[2])
    }
</script>
<body>
    @using (Html.BeginForm("Crear", "RecargaCombustibles", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.Id_DetalleRecargaComb)
        <input type="text" hidden="hidden" name="esCamioneta" id="esCamioneta" />
        <input type="text" hidden="hidden" name="esPipa" id="esPipa" />
        <input type="text" hidden="hidden" name="esUtilitario" id="esUtilitario" />
        <section class="content home">
            <div class="container-fluid">
                <div class="block-header">
                    <div class="row clearfix">
                        <div class="col-lg-5 col-md-5 col-sm-12">
                            <h2>Recarga de Combustible</h2>
                            <ul class="breadcrumb padding-0">
                                <li class="breadcrumb-item"><a href="~/DashBoard/Vista/Dashboard.aspx"><i class="zmdi zmdi-home"></i></a></li>
                                <li class="breadcrumb-item">Equipo de Transporte</li>
                                <li class="breadcrumb-item">Recargas</li>
                            </ul>
                        </div>
                    </div>
                    <div class="card">
                        <div class="header">
                            Recarga de<strong> Combustible</strong>
                        </div>
                        <div class="body">
                            <div class="row clearfix">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <strong>Vehículo*</strong>
                                        @Html.DevExpress().ComboBox(settings =>
                                   {
                                       settings.Name = "Id_Vehiculo";
                                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                       settings.SelectedIndex = 0;
                                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                       settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
                                       settings.Properties.DropDownWidth = 550;
                                       //settings.Properties.TextField = "Descripcion";
                                       settings.Properties.ValueField = "IdEquipoTransporte";
                                       settings.Properties.ValueType = typeof(int);
                                       settings.Properties.ClientSideEvents.SelectedIndexChanged = "OnSelectedIndexChanged";
                                       settings.Properties.TextFormatString = "{0}";
                                       settings.Properties.Columns.Add("Descripcion", "Descripción", 130);
                                       settings.Properties.Columns.Add("Chofer", "Chofer", 130);
                                       settings.CustomJSProperties = (sender, e) =>
                                       {
                                           System.Collections.ArrayList list = new System.Collections.ArrayList();
                                           MVCxComboBox comb = sender as MVCxComboBox;
                                           foreach (ListEditItem item in comb.Items)
                                           {
                                               list.Add(item.GetValue("EsCamioneta") + "|" + item.GetValue("EsPipa") + "|" + item.GetValue("EsUtilitario"));
                                           }
                                           e.Properties["cphidenVehiculos"] = list;
                                       };
                                   }).BindList(ViewBag.Vehiculos).GetHtml()
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Id_Vehiculo, "", new { @class = "alert-danger" })
                                </div>
                                @*<div class="col-md-3">
                                        <div class="form-group">
                                            <strong>Chofer</strong>
                                            <div>
                                                @Html.LabelFor(m => m.Chofer, Model.Chofer)
                                            </div>
                                        </div>
                                    </div>*@
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <strong>Kilometraje Actual*</strong>
                                        @Html.DevExpress().TextBox(settings =>
                                        {
                                            settings.Name = "KilometrajeActual";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.MaskSettings.Mask = "<0..9999999>";
                                            settings.Properties.MaskSettings.ErrorText = "Kilometraje Actual";
                                            settings.Properties.ValidationSettings.Display = Display.Dynamic;
                                        }).GetHtml()
                                        @*@Html.TextBoxFor(m => m.KilometrajeActual, Model.KilometrajeActual.ToString(), new { @class = "form-control number" })*@
                                        @Html.ValidationMessageFor(m => m.KilometrajeActual, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <strong>Kilometraje Recorrido*</strong>
                                        @Html.DevExpress().TextBox(settings =>
                                        {
                                            settings.Name = "KilometrajeRecorrido";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.MaskSettings.Mask = "<0..999999>";
                                            settings.Properties.MaskSettings.ErrorText = "Kilometraje Recorrido";
                                            settings.Properties.ValidationSettings.Display = Display.Dynamic;
                                        }).GetHtml()
                                        @*@Html.TextBoxFor(m => m.KilometrajeRecorrido, Model.KilometrajeRecorrido.ToString(), new { @class = "form-control number" })*@
                                        @Html.ValidationMessageFor(m => m.KilometrajeRecorrido, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row clearfix">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <strong>Litros Recargados*</strong>
                                        @Html.DevExpress().TextBox(settings =>
                                        {
                                            settings.Name = "LitrosRecargados";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.MaskSettings.Mask = "<0..999999>";
                                            settings.Properties.MaskSettings.ErrorText = "Litros Recargados";
                                            settings.Properties.ValidationSettings.Display = Display.Dynamic;
                                        }).GetHtml()
                                        @Html.ValidationMessageFor(m => m.LitrosRecargados, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <strong>Costo de Recarga* ($)</strong>
                                        @Html.DevExpress().TextBox(settings =>
                                   {
                                       settings.Name = "Monto";
                                       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                       settings.Properties.DisplayFormatString = "f2";
                                       settings.Properties.MaskSettings.ErrorText = "Monto";
                                       settings.Properties.ValidationSettings.Display = Display.Dynamic;
                                   }).GetHtml()
                                        @* @Html.TextBoxFor(m => m.Monto, Model.Monto.ToString(), new { @class = "form-control number" })*@
                                        @Html.ValidationMessageFor(m => m.Monto, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <strong>Tipo de combustible*</strong>
                                        @Html.DevExpress().ComboBox(settings =>
                                       {
                                           settings.Name = "IdTipoCombustible";
                                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                           //settings.SelectedIndex = 0;
                                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                           settings.Properties.TextField = "Descripcion";
                                           settings.Properties.ValueField = "Id_Combustible";
                                       }).BindList(ViewBag.Combustibles).Bind(Model.IdTipoCombustible).GetHtml()
                                        @Html.ValidationMessageFor(m => m.IdTipoCombustible, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <strong>Fecha de Recarga*</strong>
                                        @Html.DevExpress().DateEdit(settings =>
                                        {
                                            settings.Name = "FechaRecarga";
                                            settings.Properties.UseMaskBehavior = true;
                                            settings.Properties.EditFormat = EditFormat.Custom;
                                            settings.Properties.EditFormatString = "dd/MMMM/yyyy";
                                            settings.Properties.DisplayFormatString = "dd MMMM, yyyy";
                                            settings.Date = DateTime.Now;
                                            //settings.PopupCalendarOwnerName = "FechaRecarga";
                                            settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                            settings.Properties.CalendarProperties.FastNavProperties.DisplayMode = FastNavigationDisplayMode.Inline;
                                        }).Bind(Model.FechaRecarga).GetHtml()
                                        @Html.ValidationMessageFor(m => m.FechaRecarga, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <strong></strong>
                                    <div class="form-group">
                                        @if (ViewBag.EsEdicion == null)
                                        {
                                            <button id="BtnCrear" formaction=@Url.Action("Crear") class="btn btn-primary btn-icon  btn-icon-mini btn-round">
                                                <i class="zmdi zmdi-plus"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button id="btnUpDate" formaction=@Url.Action("Modificar") class="btn btn-primary btn-icon  btn-icon-mini btn-round">
                                                <i class="zmdi zmdi-swap"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="row clearfix">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <strong>Cuenta Contable*</strong>
                                        @Html.DevExpress().ComboBox(settings =>
                                       {
                                           settings.Name = "IdCuentaContable";
                                           settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                           //settings.SelectedIndex = 0;
                                           settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                                           settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                                           settings.Properties.TextField = "Descripcion";
                                           settings.Properties.ValueField = "IdCuentaContable";
                                       }).BindList(ViewBag.CuentasContables).Bind(Model.IdCuentaContable).GetHtml()
                                        @Html.ValidationMessageFor(m => m.IdCuentaContable, "", new { @class = "alert-danger" })
                                    </div>
                                </div>
                            </div>
                            @if (ViewBag.MensajeError != null)
                            {
                                <div id="DivAlerta" class="container">
                                    <div class="alert alert-danger">
                                        <div class="alert-icon">
                                            <i class="zmdi zmdi-block"></i>
                                        </div>
                                        <strong>
                                            @ViewBag.MensajeError
                                        </strong>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card">
                        <div class="header">
                            Historial de <strong>Recargas</strong>
                        </div>
                        <div class="body">
                            <div class="row clearfix blockquote blockquote-info btn-round">
                                <div class="table-responsive">
                                    <table class="table table-striped  filterable">
                                        <thead>
                                            <tr>
                                                <td><strong>Id</strong></td>
                                                <td><strong>Vehiculo</strong></td>
                                                <td><strong>Chofer</strong></td>
                                                <td><strong>Fecha  de recarga</strong></td>
                                                <td><strong>Acción</strong></td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var mant in ViewBag.Recargas)
                                            {
                                                <tr>
                                                    <td>@mant.Id_DetalleRecargaComb</td>
                                                    <td>@mant.Vehiculo</td>
                                                    <td>@mant.Chofer</td>
                                                    <td>@mant.FechaRecarga</td>
                                                    <td>
                                                        <a href="@Url.Action("Eliminar", "RecargaCombustibles" , new { Id= mant.Id_DetalleRecargaComb })" class="tip" role="button" aria-haspopup="true" aria-expanded="false">
                                                            <i class="material-icons">delete</i>
                                                            <span>Eliminar</span>
                                                        </a>
                                                        <a href="@Url.Action("Modificar", "RecargaCombustibles" , new { Id=mant.Id_DetalleRecargaComb })" class="tip" role="button" aria-haspopup="true" aria-expanded="false">
                                                            <i class="material-icons">edit</i>
                                                            <span>Editar</span>
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="row clearfix">
                                <div class="col-md-6">
                                    Página @(ViewBag.Recargas.PageCount < ViewBag.Recargas.PageNumber ? 0 : ViewBag.Recargas.PageNumber) de @ViewBag.Recargas.PageCount
                                </div>
                                <div class="col-md-6 text-right">
                                    @Html.PagedListPager((IPagedList)ViewBag.Recargas, page => Url.Action("Index", new { page, @class = "btn btn-primary btn-simple" }))
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    }
</body>